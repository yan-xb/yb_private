server:
  port: 8001
spring:
  application:
    name: cloud-payment-service
  datasource:
    # 当前数据源操作类型
    type: com.alibaba.druid.pool.DruidDataSource
    # mysql驱动类
    driver-class-name: org.gjt.mm.mysql.Driver
    #    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/db_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: 123456
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
    probability: 1 #采样率值介于0和1之间，1代表全部收集


#整合mybatis
mybatis:
  #mapper存放位置
  mapper-locations: classpath*:mapper/*.xml
  #mapper中所有传入参数实体别名类所在包
  type-aliases-package: com.study.springcloud.entities

#服务注册相关配置
eureka:
  client:
    #表示是否将自己注入到注册中心
    register-with-eureka: true
    #表示从EurekaServer抓取已有的注册信息，默认为true.单点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
#       单机版
#      defaultZone: http://localhost:7001/eureka
#      集群版
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka
##       单机版   测试eureka自我保护机制与设计思想
#      defaultZone: http://localhost:7001/eureka
  instance:
#    主机 -> 服务名称修改  方便查找问题
    instance-id: payment8001
#    开启访问信息时有ip信息   方便查找问题
    prefer-ip-address: true
##    测试是ap（高可用）设计思想还是cp（强一致性）设计思想心跳检查与续约时间
##    eureka客户端向服务端发送心跳的时间间隔，单位位秒（默认时30秒）
#    lease-renewal-interval-in-seconds: 1
##    eureka服务端在收到最后一次心跳后的等待时间上限，超时将剔除项目，默认（90秒）
#    lease-expiration-duration-in-seconds: 2

